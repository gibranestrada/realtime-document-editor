{"ast":null,"code":"import _defineProperty from \"/home/gib/github/projects/document-editor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/gib/github/projects/document-editor/client/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Navbar, NavbarBrand } from \"reactstrap\";\nimport \"./App.css\";\nimport ShowEditorSection from \"./components/EditorContainer\";\nimport ShowLoginSection from \"./components/LogInContainer\";\nimport { websocket } from \"./redux\";\nimport { client } from \"./redux\";\nimport { userActivity, currentUsers, text } from \"./redux\";\n\nvar App = function App() {\n  var dispatch = useDispatch();\n  var contentDefaultMessage = [\"Start writing your document here\"];\n  var state = useSelector(function (state) {\n    return state;\n  }, shallowEqual);\n  useEffect(function () {\n    var clients = new W3CWebSocket(\"ws://ec2-52-90-200-136.compute-1.amazonaws.com:4000\");\n\n    clients.onopen = function () {\n      console.log(\"WebSocket Client Connected\");\n      dispatch(client({\n        client: clients\n      }));\n      dispatch(websocket({\n        websocketConnected: true\n      }));\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (!state.logInReducer) return;\n\n    state.clientReducer.client.onmessage = function (message) {\n      var dataFromServer = JSON.parse(message.data);\n      var stateToChange = {};\n\n      if (dataFromServer.type === \"userevent\") {\n        if (dataFromServer.data.editorContent) {\n          stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n          stateToChange.text = [dataFromServer.data.editorContent];\n        } else {\n          stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n          stateToChange.text = state.textReducer.length ? [state.textReducer] : contentDefaultMessage;\n        }\n      } else if (dataFromServer.type === \"contentchange\") {\n        stateToChange.text = [dataFromServer.data.editorContent] || contentDefaultMessage;\n        return dispatch(text(_objectSpread({}, stateToChange.text)));\n      }\n\n      stateToChange.userActivity = dataFromServer.data.userActivity;\n      dispatch(currentUsers(_objectSpread({}, stateToChange.currentUsers)));\n      dispatch(userActivity(_objectSpread({}, stateToChange.userActivity)));\n      dispatch(text(_objectSpread({}, stateToChange.text)));\n    };\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n    color: \"light\",\n    light: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, state.logInReducer != null ? React.createElement(NavbarBrand, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Exit document editor\") : React.createElement(NavbarBrand, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Real-time document editor\")), React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, state.logInReducer != null ? React.createElement(ShowEditorSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : React.createElement(ShowLoginSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/gib/github/projects/document-editor/client/src/App.js"],"names":["React","useEffect","useSelector","useDispatch","shallowEqual","w3cwebsocket","W3CWebSocket","Navbar","NavbarBrand","ShowEditorSection","ShowLoginSection","websocket","client","userActivity","currentUsers","text","App","dispatch","contentDefaultMessage","state","clients","onopen","console","log","websocketConnected","logInReducer","clientReducer","onmessage","message","dataFromServer","JSON","parse","data","stateToChange","type","editorContent","Object","values","users","textReducer","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Navbar, NavbarBrand } from \"reactstrap\";\nimport \"./App.css\";\nimport ShowEditorSection from \"./components/EditorContainer\";\nimport ShowLoginSection from \"./components/LogInContainer\";\nimport { websocket } from \"./redux\";\nimport { client } from \"./redux\";\nimport { userActivity, currentUsers, text } from \"./redux\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const contentDefaultMessage = [\"Start writing your document here\"];\n  const state = useSelector(state => state, shallowEqual);\n\n  useEffect(() => {\n    const clients = new W3CWebSocket(\n      \"ws://ec2-52-90-200-136.compute-1.amazonaws.com:4000\"\n    );\n    clients.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n      dispatch(client({ client: clients }));\n      dispatch(websocket({ websocketConnected: true }));\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!state.logInReducer) return;\n    state.clientReducer.client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      const stateToChange = {};\n      if (dataFromServer.type === \"userevent\") {\n        if (dataFromServer.data.editorContent) {\n          stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n          stateToChange.text = [dataFromServer.data.editorContent];\n        } else {\n          stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n          stateToChange.text = state.textReducer.length\n            ? [state.textReducer]\n            : contentDefaultMessage;\n        }\n      } else if (dataFromServer.type === \"contentchange\") {\n        stateToChange.text =\n          [dataFromServer.data.editorContent] || contentDefaultMessage;\n        return dispatch(text({ ...stateToChange.text }));\n      }\n      stateToChange.userActivity = dataFromServer.data.userActivity;\n      dispatch(currentUsers({ ...stateToChange.currentUsers }));\n      dispatch(userActivity({ ...stateToChange.userActivity }));\n      dispatch(text({ ...stateToChange.text }));\n    };\n  });\n\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        {state.logInReducer != null ? (\n          <NavbarBrand href=\"/\">Exit document editor</NavbarBrand>\n        ) : (\n          <NavbarBrand href=\"/\">Real-time document editor</NavbarBrand>\n        )}\n      </Navbar>\n      <div className=\"container-fluid\">\n        {state.logInReducer != null ? (\n          <ShowEditorSection />\n        ) : (\n          <ShowLoginSection />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}