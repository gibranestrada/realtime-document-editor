{"ast":null,"code":"import _defineProperty from\"/home/gib/github/projects/document-editor/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{CONNECT_WEBSOCKET}from\"../websocket/websocketTypes\";var initialState={websocketConnected:false};var websocketReducer=function websocketReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CONNECT_WEBSOCKET:return _objectSpread({},state,{websocketConnected:action.payload.websocketConnected});default:return state;}};export default websocketReducer;","map":{"version":3,"sources":["/home/gib/github/projects/document-editor/client/src/redux/websocket/websocketReducers.js"],"names":["CONNECT_WEBSOCKET","initialState","websocketConnected","websocketReducer","state","action","type","payload"],"mappings":"q7BAAA,OAASA,iBAAT,KAAkC,6BAAlC,CAEA,GAAMC,CAAAA,YAAY,CAAG,CAAEC,kBAAkB,CAAE,KAAtB,CAArB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CACzD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,iBAAL,CACE,wBACKI,KADL,EAEEF,kBAAkB,CAAEG,MAAM,CAACE,OAAP,CAAeL,kBAFrC,GAIF,QACE,MAAOE,CAAAA,KAAP,CAPJ,CASD,CAVD,CAYA,cAAeD,CAAAA,gBAAf","sourcesContent":["import { CONNECT_WEBSOCKET } from \"../websocket/websocketTypes\";\n\nconst initialState = { websocketConnected: false };\n\nconst websocketReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONNECT_WEBSOCKET:\n      return {\n        ...state,\n        websocketConnected: action.payload.websocketConnected\n      };\n    default:\n      return state;\n  }\n};\n\nexport default websocketReducer;\n"]},"metadata":{},"sourceType":"module"}