{"ast":null,"code":"import React from\"react\";import{useSelector,shallowEqual}from\"react-redux\";import{UncontrolledTooltip}from\"reactstrap\";import Editor from\"react-medium-editor\";import\"medium-editor/dist/css/medium-editor.css\";import\"medium-editor/dist/css/themes/default.css\";import Blockies from'react-blockies';var ShowEditorSection=function ShowEditorSection(){var state=useSelector(function(state){return state;},shallowEqual);var contentDefaultMessage=\"Start writing your document here\";/* When content changes, we send the\ncurrent content of the editor to the server. */var onEditorStateChange=function onEditorStateChange(text){state.clientReducer.client.send(JSON.stringify({type:\"contentchange\",username:state.logInReducer.username,content:text}));};return React.createElement(\"div\",{className:\"main-content\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-md-7 order-last order-md-first\"},React.createElement(\"div\",{className:\"document-holder\"},React.createElement(\"div\",{className:\"currentusers\"},Object.entries(state.currentUsersReducer.currentUsers).map(function(user,index){return React.createElement(React.Fragment,{key:user[1].username+\"\".concat(index)},React.createElement(\"span\",{id:\"Hi\".concat(user[1].username),className:\"userInfo\"},React.createElement(Blockies,{className:\"account__avatar identicon\"// style={{ backgroundColor: user[1].randomcolor }}\n,size:5,scale:8,seed:user[1].username})),React.createElement(UncontrolledTooltip,{placement:\"top\",target:\"Hi\".concat(user[1].username)},user[1].username));})),React.createElement(Editor,{options:{placeholder:{text:state.textReducer?contentDefaultMessage:\"\"},toolbar:{buttons:[\"bold\",\"italic\",\"underline\"]}},className:\"body-editor h-75 unique_and_mandatory_class_name\",text:state.textReducer,onChange:onEditorStateChange}))),React.createElement(\"div\",{className:\"col-md-5 order-first order-md-first\"},React.createElement(\"div\",{className:\"history-holder\"},React.createElement(\"ul\",null,Object.entries(state.userActivityReducer.userActivity).map(function(activity,index){return React.createElement(\"li\",{key:\"activity-\".concat(index)},activity[1]);}))))));};export default ShowEditorSection;","map":{"version":3,"sources":["/home/gib/github/projects/document-editor/client/src/components/EditorContainer.js"],"names":["React","useSelector","shallowEqual","UncontrolledTooltip","Editor","Blockies","ShowEditorSection","state","contentDefaultMessage","onEditorStateChange","text","clientReducer","client","send","JSON","stringify","type","username","logInReducer","content","Object","entries","currentUsersReducer","currentUsers","map","user","index","placeholder","textReducer","toolbar","buttons","userActivityReducer","userActivity","activity"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,YAAtB,KAA0C,aAA1C,CACA,OAASC,mBAAT,KAAoC,YAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAO,0CAAP,CACA,MAAO,2CAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAMC,CAAAA,KAAK,CAAGN,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAiBL,YAAjB,CAAzB,CACA,GAAMM,CAAAA,qBAAqB,CAAG,kCAA9B,CAEA;+CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,IAAI,CAAI,CAClCH,KAAK,CAACI,aAAN,CAAoBC,MAApB,CAA2BC,IAA3B,CACEC,IAAI,CAACC,SAAL,CAAe,CACbC,IAAI,CAAE,eADO,CAEbC,QAAQ,CAAEV,KAAK,CAACW,YAAN,CAAmBD,QAFhB,CAGbE,OAAO,CAAET,IAHI,CAAf,CADF,EAOD,CARD,CAUA,MACE,4BAAK,SAAS,CAAC,cAAf,EACE,2BAAK,SAAS,CAAC,KAAf,EACE,2BAAK,SAAS,CAAC,oCAAf,EACE,2BAAK,SAAS,CAAC,iBAAf,EACE,2BAAK,SAAS,CAAC,cAAf,EACGU,MAAM,CAACC,OAAP,CAAed,KAAK,CAACe,mBAAN,CAA0BC,YAAzC,EAAuDC,GAAvD,CACC,SAACC,IAAD,CAAOC,KAAP,QACE,qBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAED,IAAI,CAAC,CAAD,CAAJ,CAAQR,QAAR,WAAsBS,KAAtB,CAArB,EACE,4BAAM,EAAE,aAAOD,IAAI,CAAC,CAAD,CAAJ,CAAQR,QAAf,CAAR,CAAmC,SAAS,CAAC,UAA7C,EACE,oBAAC,QAAD,EACE,SAAS,CAAC,2BACX;AAFD,CAGE,IAAI,CAAE,CAHR,CAIE,KAAK,CAAE,CAJT,CAKE,IAAI,CAAEQ,IAAI,CAAC,CAAD,CAAJ,CAAQR,QALhB,EADF,CADF,CAUE,oBAAC,mBAAD,EACE,SAAS,CAAC,KADZ,CAEE,MAAM,aAAOQ,IAAI,CAAC,CAAD,CAAJ,CAAQR,QAAf,CAFR,EAIGQ,IAAI,CAAC,CAAD,CAAJ,CAAQR,QAJX,CAVF,CADF,EADD,CADH,CADF,CAwBE,oBAAC,MAAD,EACE,OAAO,CAAE,CACPU,WAAW,CAAE,CACXjB,IAAI,CAAEH,KAAK,CAACqB,WAAN,CAAoBpB,qBAApB,CAA4C,EADvC,CADN,CAIPqB,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,MAAD,CAAS,QAAT,CAAmB,WAAnB,CAAX,CAJF,CADX,CAOE,SAAS,CAAC,kDAPZ,CAQE,IAAI,CAAEvB,KAAK,CAACqB,WARd,CASE,QAAQ,CAAEnB,mBATZ,EAxBF,CADF,CADF,CAuCE,2BAAK,SAAS,CAAC,qCAAf,EACE,2BAAK,SAAS,CAAC,gBAAf,EAEE,8BACGW,MAAM,CAACC,OAAP,CAAed,KAAK,CAACwB,mBAAN,CAA0BC,YAAzC,EAAuDR,GAAvD,CACC,SAACS,QAAD,CAAWP,KAAX,CAAqB,CACnB,MAAO,2BAAI,GAAG,oBAAcA,KAAd,CAAP,EAA+BO,QAAQ,CAAC,CAAD,CAAvC,CAAP,CACD,CAHF,CADH,CAFF,CADF,CAvCF,CADF,CADF,CAwDD,CAxED,CA0EA,cAAe3B,CAAAA,iBAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { UncontrolledTooltip } from \"reactstrap\";\nimport Editor from \"react-medium-editor\";\nimport \"medium-editor/dist/css/medium-editor.css\";\nimport \"medium-editor/dist/css/themes/default.css\";\nimport Blockies from 'react-blockies';\n\n\n\nconst ShowEditorSection = () => {\n  const state = useSelector(state => state, shallowEqual);\n  const contentDefaultMessage = \"Start writing your document here\";\n\n  /* When content changes, we send the\ncurrent content of the editor to the server. */\n  const onEditorStateChange = text => {\n    state.clientReducer.client.send(\n      JSON.stringify({\n        type: \"contentchange\",\n        username: state.logInReducer.username,\n        content: text\n      })\n    );\n  };\n\n  return (\n    <div className=\"main-content\">\n      <div className=\"row\">\n        <div className=\"col-md-7 order-last order-md-first\">\n          <div className=\"document-holder\">\n            <div className=\"currentusers\">\n              {Object.entries(state.currentUsersReducer.currentUsers).map(\n                (user, index) => (\n                  <React.Fragment key={user[1].username + `${index}`}>\n                    <span id={`Hi${user[1].username}`} className=\"userInfo\">\n                      <Blockies\n                        className=\"account__avatar identicon\"\n                       // style={{ backgroundColor: user[1].randomcolor }}\n                        size={5}\n                        scale={8}\n                        seed={user[1].username}\n                      />\n                    </span>\n                    <UncontrolledTooltip\n                      placement=\"top\"\n                      target={`Hi${user[1].username}`}\n                    >\n                      {user[1].username}\n                    </UncontrolledTooltip>\n                  </React.Fragment>\n                )\n              )}\n            </div>\n            <Editor\n              options={{\n                placeholder: {\n                  text: state.textReducer ? contentDefaultMessage : \"\"\n                },\n                toolbar: { buttons: [\"bold\", \"italic\", \"underline\"] }\n              }}\n              className=\"body-editor h-75 unique_and_mandatory_class_name\"\n              text={state.textReducer}\n              onChange={onEditorStateChange}\n            />\n          </div>\n        </div>\n        <div className=\"col-md-5 order-first order-md-first\">\n          <div className=\"history-holder\">\n            {/*console.log(state.userActivityReducer) */}\n            <ul>\n              {Object.entries(state.userActivityReducer.userActivity).map(\n                (activity, index) => {\n                  return <li key={`activity-${index}`}>{activity[1]}</li>;\n                }\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowEditorSection;\n"]},"metadata":{},"sourceType":"module"}