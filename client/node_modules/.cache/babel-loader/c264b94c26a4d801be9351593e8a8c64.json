{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gibran\\\\github\\\\projects\\\\realtime-document-editor\\\\client\\\\src\\\\components\\\\EditorContainer.js\";\nimport React from \"react\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { UncontrolledTooltip } from \"reactstrap\";\nimport Editor from \"react-medium-editor\";\nimport \"medium-editor/dist/css/medium-editor.css\";\nimport \"medium-editor/dist/css/themes/default.css\";\nimport Blockies from 'react-blockies';\n\nvar ShowEditorSection = function ShowEditorSection() {\n  var state = useSelector(function (state) {\n    return state;\n  }, shallowEqual);\n  var contentDefaultMessage = \"Start writing your document here\";\n  /* When content changes, we send the\r\n  current content of the editor to the server. */\n\n  var onEditorStateChange = function onEditorStateChange(text) {\n    state.clientReducer.client.send(JSON.stringify({\n      type: \"contentchange\",\n      username: state.logInReducer.username,\n      content: text\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-7 order-last order-md-first\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"document-holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"currentusers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, Object.entries(state.currentUsersReducer.currentUsers).map(function (user, index) {\n    return React.createElement(React.Fragment, {\n      key: user[1].username + \"\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"Hi\".concat(user[1].username),\n      className: \"userInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Blockies, {\n      className: \"account__avatar identicon\" // style={{ backgroundColor: user[1].randomcolor }}\n      ,\n      size: 5,\n      scale: 8,\n      seed: user[1].username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(UncontrolledTooltip, {\n      placement: \"top\",\n      target: \"Hi\".concat(user[1].username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, user[1].username));\n  })), React.createElement(Editor, {\n    options: {\n      placeholder: {\n        text: state.textReducer ? contentDefaultMessage : \"\"\n      },\n      toolbar: {\n        buttons: [\"bold\", \"italic\", \"underline\"]\n      }\n    },\n    className: \"body-editor h-75 unique_and_mandatory_class_name\",\n    text: state.textReducer,\n    onChange: onEditorStateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-md-5 order-first order-md-first\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"history-holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, Object.entries(state.userActivityReducer.userActivity).map(function (activity, index) {\n    return React.createElement(\"li\", {\n      key: \"activity-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, activity[1]);\n  }))))));\n};\n\nexport default ShowEditorSection;","map":{"version":3,"sources":["C:/Users/gibran/github/projects/realtime-document-editor/client/src/components/EditorContainer.js"],"names":["React","useSelector","shallowEqual","UncontrolledTooltip","Editor","Blockies","ShowEditorSection","state","contentDefaultMessage","onEditorStateChange","text","clientReducer","client","send","JSON","stringify","type","username","logInReducer","content","Object","entries","currentUsersReducer","currentUsers","map","user","index","placeholder","textReducer","toolbar","buttons","userActivityReducer","userActivity","activity"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useSelector, shallowEqual } from \"react-redux\";\r\nimport { UncontrolledTooltip } from \"reactstrap\";\r\nimport Editor from \"react-medium-editor\";\r\nimport \"medium-editor/dist/css/medium-editor.css\";\r\nimport \"medium-editor/dist/css/themes/default.css\";\r\nimport Blockies from 'react-blockies';\r\n\r\n\r\n\r\nconst ShowEditorSection = () => {\r\n  const state = useSelector(state => state, shallowEqual);\r\n  const contentDefaultMessage = \"Start writing your document here\";\r\n\r\n  /* When content changes, we send the\r\ncurrent content of the editor to the server. */\r\n  const onEditorStateChange = text => {\r\n    state.clientReducer.client.send(\r\n      JSON.stringify({\r\n        type: \"contentchange\",\r\n        username: state.logInReducer.username,\r\n        content: text\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-7 order-last order-md-first\">\r\n          <div className=\"document-holder\">\r\n            <div className=\"currentusers\">\r\n              {Object.entries(state.currentUsersReducer.currentUsers).map(\r\n                (user, index) => (\r\n                  <React.Fragment key={user[1].username + `${index}`}>\r\n                    <span id={`Hi${user[1].username}`} className=\"userInfo\">\r\n                      <Blockies\r\n                        className=\"account__avatar identicon\"\r\n                       // style={{ backgroundColor: user[1].randomcolor }}\r\n                        size={5}\r\n                        scale={8}\r\n                        seed={user[1].username}\r\n                      />\r\n                    </span>\r\n                    <UncontrolledTooltip\r\n                      placement=\"top\"\r\n                      target={`Hi${user[1].username}`}\r\n                    >\r\n                      {user[1].username}\r\n                    </UncontrolledTooltip>\r\n                  </React.Fragment>\r\n                )\r\n              )}\r\n            </div>\r\n            <Editor\r\n              options={{\r\n                placeholder: {\r\n                  text: state.textReducer ? contentDefaultMessage : \"\"\r\n                },\r\n                toolbar: { buttons: [\"bold\", \"italic\", \"underline\"] }\r\n              }}\r\n              className=\"body-editor h-75 unique_and_mandatory_class_name\"\r\n              text={state.textReducer}\r\n              onChange={onEditorStateChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-5 order-first order-md-first\">\r\n          <div className=\"history-holder\">\r\n            {/*console.log(state.userActivityReducer) */}\r\n            <ul>\r\n              {Object.entries(state.userActivityReducer.userActivity).map(\r\n                (activity, index) => {\r\n                  return <li key={`activity-${index}`}>{activity[1]}</li>;\r\n                }\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowEditorSection;\r\n"]},"metadata":{},"sourceType":"module"}