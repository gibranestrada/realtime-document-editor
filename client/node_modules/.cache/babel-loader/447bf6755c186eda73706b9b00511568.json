{"ast":null,"code":"import React,{useRef}from\"react\";import{useSelector,useDispatch,shallowEqual}from\"react-redux\";import{setUsername}from\"../redux\";import Blockies from'react-blockies';var ShowLoginSection=function ShowLoginSection(){var state=useSelector(function(state){return state;},shallowEqual);var dispatch=useDispatch();var inputEl=useRef(null);var logInUser=function logInUser(e){var username=inputEl.current.value.replace(/ /g,\"\");var data=username;if(!state.websocketReducer.websocketConnected){return e.preventDefault();}dispatch(setUsername(data));state.clientReducer.client.send(JSON.stringify({username:data,type:\"userevent\"}));e.preventDefault();};return React.createElement(\"div\",{className:\"account\"},React.createElement(\"div\",{className:\"account__wrapper\"},React.createElement(\"div\",{className:\"account__card\"},React.createElement(\"div\",{className:\"account__profile\"},React.createElement(Blockies,{className:\"account__avatar identicon\",size:10,scale:10,seed:\"randomness\"}),!state.websocketReducer.websocketConnected?React.createElement(\"p\",{className:\"text-center\"},\"Connecting to server. Please wait...\"):React.createElement(React.Fragment,null,React.createElement(\"p\",{className:\"account__name\"},\"Hello, user!\"),React.createElement(\"p\",{className:\"account__sub\"},\"Join to edit the document\"))),React.createElement(\"form\",{onSubmit:logInUser},React.createElement(\"input\",{name:\"username\",type:\"text\",title:\"No special characters and less than 16 characters\",pattern:\"[\\\\sA-Za-z0-9\\\\s]{1,15}\",ref:inputEl,className:\"form-control\",required:true}),React.createElement(\"input\",{type:\"submit\",className:\"btn account__btn\",value:\"Join\"})))));};export default ShowLoginSection;","map":{"version":3,"sources":["/home/gib/github/projects/document-editor/client/src/components/LogInContainer.js"],"names":["React","useRef","useSelector","useDispatch","shallowEqual","setUsername","Blockies","ShowLoginSection","state","dispatch","inputEl","logInUser","e","username","current","value","replace","data","websocketReducer","websocketConnected","preventDefault","clientReducer","client","send","JSON","stringify","type"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,YAAnC,KAAuD,aAAvD,CACA,OAASC,WAAT,KAA4B,UAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAMC,CAAAA,KAAK,CAAGN,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAiBJ,YAAjB,CAAzB,CACA,GAAMK,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,OAAO,CAAGT,MAAM,CAAC,IAAD,CAAtB,CAEA,GAAMU,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,CAAC,CAAI,CACrB,GAAMC,CAAAA,QAAQ,CAAGH,OAAO,CAACI,OAAR,CAAgBC,KAAhB,CAAsBC,OAAtB,CAA8B,IAA9B,CAAoC,EAApC,CAAjB,CACA,GAAMC,CAAAA,IAAI,CAAGJ,QAAb,CAEA,GAAI,CAACL,KAAK,CAACU,gBAAN,CAAuBC,kBAA5B,CAAgD,CAC9C,MAAOP,CAAAA,CAAC,CAACQ,cAAF,EAAP,CACD,CACDX,QAAQ,CAACJ,WAAW,CAACY,IAAD,CAAZ,CAAR,CACAT,KAAK,CAACa,aAAN,CAAoBC,MAApB,CAA2BC,IAA3B,CACEC,IAAI,CAACC,SAAL,CAAe,CACbZ,QAAQ,CAAEI,IADG,CAEbS,IAAI,CAAE,WAFO,CAAf,CADF,EAMAd,CAAC,CAACQ,cAAF,GACD,CAfD,CAiBA,MACE,4BAAK,SAAS,CAAC,SAAf,EACE,2BAAK,SAAS,CAAC,kBAAf,EACE,2BAAK,SAAS,CAAC,eAAf,EACE,2BAAK,SAAS,CAAC,kBAAf,EACE,oBAAC,QAAD,EACE,SAAS,CAAC,2BADZ,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAE,EAHT,CAIE,IAAI,CAAC,YAJP,EADF,CAOG,CAACZ,KAAK,CAACU,gBAAN,CAAuBC,kBAAxB,CACC,yBAAG,SAAS,CAAC,aAAb,yCADD,CAKC,wCACE,yBAAG,SAAS,CAAC,eAAb,iBADF,CAEE,yBAAG,SAAS,CAAC,cAAb,8BAFF,CAZJ,CADF,CAoBE,4BAAM,QAAQ,CAAER,SAAhB,EACE,6BACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,mDAHR,CAIE,OAAO,CAAC,yBAJV,CAKE,GAAG,CAAED,OALP,CAME,SAAS,CAAC,cANZ,CAOE,QAAQ,KAPV,EADF,CAUE,6BAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAC,kBAA/B,CAAkD,KAAK,CAAC,MAAxD,EAVF,CApBF,CADF,CADF,CADF,CAuCD,CA7DD,CA8DA,cAAeH,CAAAA,gBAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { setUsername } from \"../redux\";\nimport Blockies from 'react-blockies';\n\nconst ShowLoginSection = () => {\n  const state = useSelector(state => state, shallowEqual);\n  const dispatch = useDispatch();\n  const inputEl = useRef(null);\n\n  const logInUser = e => {\n    const username = inputEl.current.value.replace(/ /g, \"\");\n    const data = username;\n\n    if (!state.websocketReducer.websocketConnected) {\n      return e.preventDefault();\n    }\n    dispatch(setUsername(data));\n    state.clientReducer.client.send(\n      JSON.stringify({\n        username: data,\n        type: \"userevent\"\n      })\n    );\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"account\">\n      <div className=\"account__wrapper\">\n        <div className=\"account__card\">\n          <div className=\"account__profile\">\n            <Blockies\n              className=\"account__avatar identicon\"\n              size={10}\n              scale={10}\n              seed=\"randomness\"\n            />\n            {!state.websocketReducer.websocketConnected ? (\n              <p className=\"text-center\">\n                Connecting to server. Please wait...\n              </p>\n            ) : (\n              <>\n                <p className=\"account__name\">Hello, user!</p>\n                <p className=\"account__sub\">Join to edit the document</p>\n              </>\n            )}\n          </div>\n\n          <form onSubmit={logInUser}>\n            <input\n              name=\"username\"\n              type=\"text\"\n              title=\"No special characters and less than 16 characters\"\n              pattern=\"[\\sA-Za-z0-9\\s]{1,15}\"\n              ref={inputEl}\n              className=\"form-control\"\n              required\n            />\n            <input type=\"submit\" className=\"btn account__btn\" value=\"Join\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ShowLoginSection;\n"]},"metadata":{},"sourceType":"module"}