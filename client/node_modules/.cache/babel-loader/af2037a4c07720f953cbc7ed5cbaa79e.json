{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\gibran\\\\github\\\\projects\\\\realtime-document-editor\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_USERNAME } from \"./logInTypes\";\nvar initialState = null;\n\nvar logInReducer = function logInReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default logInReducer;","map":{"version":3,"sources":["C:/Users/gibran/github/projects/realtime-document-editor/client/src/redux/login/logInReducers.js"],"names":["SET_USERNAME","initialState","logInReducer","state","action","type","username","payload"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,cAA7B;AAEA,IAAMC,YAAY,GAAG,IAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,YAAL;AACE,+BACKG,KADL;AAEEG,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAFnB;;AAIF;AACE,aAAOJ,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,YAAf","sourcesContent":["import { SET_USERNAME } from \"./logInTypes\";\r\n\r\nconst initialState = null;\r\n\r\nconst logInReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERNAME:\r\n      return {\r\n        ...state,\r\n        username: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default logInReducer;\r\n"]},"metadata":{},"sourceType":"module"}